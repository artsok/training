Запись: https://www.youtube.com/watch?v=WySd3L0G4PQ
Android FrameWork - многослойный, включает в себя несколько слоев. Каждый из них написан на своем собтвенном языке,
каждый из них выполняет свою собственную функцию.

1. (См.картинку Android_Framework.png)

Самый нижний слой - красный, Linux Kernel (Находятся все драйверы - для камер и т.д).
Зеленый слой - интерфейсы, чтобы работать с этитими драйверами. Например: библиотека, чтобы работать с GPS провайдером или библиотека,
чтобы работать с экранчиком.
Желтый слой - Android Runtime. В андроиде есть своя собственная виртаульная машина, которая выполняет код. Также как и в Java.
Был dalvik virtual machine, а после Lilipop передалили и назвали ART (Android RunTime).
Синий слой - это сам фреймворк (Application Framework). Те самые вещи, которые мы как девелоперы используем (Activity Manager, Location Manager, Notification Manager).
К сожалению, эта часть переписывается тоже ребятами из Samsung, HTC. Реализация этих менеджеров может отличаться от девайся к девайсу.
Самый верхний слой (Applications), это приложения. Когда покупаем телефон, там уже есть установленные приложения. Приложения, контактов, браузеров,
Главный экран который вы видите в Androide это приложение Launcher.

2. Как это работает (How_does_it_work.png)
Написал приложение, оно использует Location Manager Service, последний использует GpsLocationProvider. Провайдер, использует
нативную библиотеку, которая написана на C++. Далее обращаемся к Linux Kernel Driver, чтобы получить от GPS чипа наше положение.

Каждый раз, когда мое приложение захочет сделать запрос, оно обратиться к моему binder (IPC), передаст запрос, передаст собственный адрес и
binder будет коммуницировать с Location Manager.

Каждое приложение живет с своей писочнеце (sandbox) и не имеет доступа к другим приложениям, если только не получить права root.

3. Компиляция APK-файла.
APK - это просто некий zip.

(См.картинку Compile_android.png)

Руководство по Git:
http://rogerdudler.github.io/git-guide/